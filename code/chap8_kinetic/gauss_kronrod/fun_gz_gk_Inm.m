% Hua-sheng XIE, FSC-PKU, huashengxie@gmail.com, 2016-05-23 19:08
% Calculate Inm(za,zb) in Gurcan2014JCP
% 16-05-24 18:00 seems ok, for Im(w)>0, need extend to Im(w)<=0

% ~0.003s per case, in contrast to ~1.0s to adaptive Simpson
% 16-05-24 19:22 with analytical continuation, ~0.008s per case

% change noac=1 to noac=0 for with analytical continuation, not test
% rigorous yet
function fInm=fun_gz_gk_Inm(zeta_alpha,zeta_beta,b,n,m)
% v_para general z function, 16 point
% v_perp gauss-kronrod quadrature, 30 point
% accurate to around 7-digits
    
    z1=@(x)0.5*(zeta_beta+sqrt(zeta_beta^2-2*(x.^2+2*zeta_alpha)));
    z2=@(x)0.5*(zeta_beta-sqrt(zeta_beta^2-2*(x.^2+2*zeta_alpha)));
    fun_gm=@(x)Gm(z1(x),z2(x),m);
    
    [xgk,wgk] = kronrod_set;
    N=floor(length(xgk));
    fnm0=@(y) besselj(0,sqrt(2*b).*y).^2.*y.^n.*fun_gm(y).*exp(-y.^2);
    fnm=@(t) 2*fnm0(1./t-1)./t.^2;
    fInm=0;
    for j=1:N
        fInm=fInm+fnm(xgk(j))*wgk(j);
    end
    
    w=zeta_beta^2/4-zeta_alpha; % for analytical continuation
    noac=1; % without analytical continuation
    if(noac==0 && imag(zeta_alpha)<=0 && real(w)>0)
        fres=@(t)(1-t.^2).^((n-1)/2).*(t*sqrt(w)+...
            zeta_beta/2).^m.*besselj(...
            0,2*sqrt(b.*(1-t.^2)*w)).^2.*exp(-2*(1-t.^2)*w-...
            (t*sqrt(w)+zeta_beta/2).^2);

        resInm=0;
        for j=1:N
            resInm=resInm+fres(xgk(j))*wgk(j);
            resInm=resInm+fres(-xgk(j))*wgk(j);
        end
        resInm=resInm+fres(0)*wgk(N+1);

        if(imag(zeta_alpha)==0)
            cof=0.5;
        else
            cof=1.0;
        end
        fInm=fInm-cof*1i*sqrt(pi)*sqrt(2^(n+3))*sqrt(w^n)*resInm;
    end
    
end

function fGm=Gm(z1,z2,m)
    eps=1e-32;
    zd=0.5*(z1-z2);
    zb=0.5*(z1+z2);
    if(abs(zd)<eps)
        zd=eps;
    end
    z1r=zb+zd;
    z2r=zb-zd;

    fGm=0.5*(Zm(z1r,m)-Zm(z2r,m))/zd;
end

function fZ=Zm(z,m)
    pm=1;
    if(imag(z)<0)
%         z=conj(z);
        pm=-1;
        z=pm*z; % seems ok, 16-05-24 13:15
    end
    Z0=z.^m.*zfun(z);
    fZ=Z0;
    for k=2:m % k=1:m if we use only Zm not Zm(z1)-Zm(z2)
        fZ=fZ+gamma((m-k+1)/2)/sqrt(pi)*z.^(k-1);
    end
    fZ=pm*fZ;
end

function [x,w] = kronrod_set
% abscissas and weights for Gauss-Kronrod quadrature
% https://people.sc.fsu.edu/~jburkardt/m_src/quadrule/kronrod_set.m
% or http://keisan.casio.com/exec/system/1289382036
% Integral ( -1 <= X <= 1 ) F(X) dX
% Only half of nodes needed for Integral ( 0 <= X <= 1 ) F(X) dX
% 31-point to 15
n=61;
if(n==31) % 31-point from 17 to 31
 x=[0.1011420669187175; 0.2011940939974345; 0.2991800071531688;
    0.3941513470775634; 0.4850818636402397; 0.5709721726085388;
    0.6509967412974170; 0.7244177313601700; 0.7904185014424659;
    0.8482065834104272; 0.8972645323440819; 0.9372733924007059;
    0.9677390756791391; 0.9879925180204854; 0.9980022986933971];
 w=[0.1007698455238756; 0.9917359872179196E-01; 0.9664272698362368E-01;
    0.9312659817082532E-01; 0.8856444305621177E-01; 0.8308050282313302E-01;
    0.7684968075772038E-01; 0.6985412131872826E-01; 0.6200956780067064E-01;
    0.5348152469092809E-01; 0.4458975132476488E-01; 0.3534636079137585E-01;
    0.2546084732671532E-01; 0.1500794732931612E-01; 0.5377479872923349E-02;
    0.1013300070147915490174]; % last point in w is for x=0
elseif(n==41) % 41-point
 x=[0.7652652113349733E-01; 0.1526054652409227; 0.2277858511416451;
    0.3016278681149130; 0.3737060887154196; 0.4435931752387251;
    0.5108670019508271; 0.5751404468197103; 0.6360536807265150;
    0.6932376563347514; 0.7463319064601508; 0.7950414288375512;
    0.8391169718222188; 0.8782768112522820; 0.9122344282513259;
    0.9408226338317548; 0.9639719272779138; 0.9815078774502503;
    0.9931285991850949; 0.9988590315882777];
 w=[0.7637786767208074E-01; 0.7570449768455667E-01; 0.7458287540049919E-01;
    0.7303069033278667E-01; 0.7105442355344407E-01; 0.6864867292852162E-01;
    0.6583459713361842E-01; 0.6265323755478117E-01; 0.5911140088063957E-01;
    0.5519510534828599E-01; 0.5094457392372869E-01; 0.4643482186749767E-01;
    0.4166887332797369E-01; 0.3660016975820080E-01; 0.3128730677703280E-01;
    0.2588213360495116E-01; 0.2038837346126652E-01; 0.1462616925697125E-01;
    0.8600269855642942E-02; 0.3073583718520532E-02;
    0.076600711917999656445];
elseif(n==61) % 61-point
x=[0.999484410050490637571; 0.996893484074649540272; 0.991630996870404594859;
0.98366812327974720997; 0.973116322501126268375; 0.960021864968307512217;
0.944374444748559979416; 0.926200047429274325879; 0.905573307699907798547;
0.882560535792052681543; 0.857205233546061098959; 0.829565762382768397443;
0.799727835821839083014; 0.767777432104826194918; 0.733790062453226804726;
0.697850494793315796932; 0.66006106412662696137; 0.6205261829892428611405;
0.579345235826361691756; 0.5366241481420198992642; 0.4924804678617785749937;
0.447033769538089176781; 0.4004012548303943925355; 0.352704725530878113471;
0.3040732022736250773727; 0.2546369261678898464398; 0.204525116682309891439;
0.1538699136085835469638; 0.1028069379667370301471; 0.051471842555317695833];
w=[0.001389013698677007625; 0.00389046112709988405127; 0.006630703915931292173;
0.009273279659517763428; 0.011823015253496341742; 0.014369729507045804813;
0.01692088918905327262745; 0.019414141193942381173; 0.021828035821609192297;
0.024191162078080601366; 0.0265099548823331016106; 0.028754048765041292844;
0.0309072575623877624729; 0.0329814470574837260318; 0.034979338028060024137;
0.0368823646518212292239; 0.03867894562472759295; 0.0403745389515359591122;
0.0419698102151642461471; 0.043452539701356069316; 0.0448148001331626631925;
0.046059238271006988116; 0.047185546569299153945; 0.048185861757087129141;
0.049055434555029778888; 0.049795683427074206358; 0.0504059214027823468409;
0.050881795898749606492; 0.051221547849258772171; 0.051426128537459025934;
0.051494729429451567558];
else % 81-point
x=[0.99970755925870001652; 0.99823770971055920035; 0.99525057344607275037;
0.99072623869945700645; 0.984722839864250061029; 0.977259949983774262663;
0.968323126854149900904; 0.957916819213791655805; 0.946071837162500038202;
0.932812808278676533361; 0.918149543072898876829; 0.902098806968874296728;
0.884692008701089745969; 0.865959503212259503821; 0.845923985587310717421;
0.824612230833311663196; 0.802060566140252127165; 0.778305651426519387695;
0.753379803438942198172; 0.727318255189927103281; 0.700162977487329931031;
0.671956684614179548379; 0.6427395243055799625372; 0.612553889667980237953;
0.58144706582913000653; 0.549467125095128202076; 0.5166606073863837059774;
0.4830758016861787129086; 0.4487645136381637639152; 0.413779204371605001525;
0.3781714354735889245685; 0.341994090825758473007; 0.3053024417352467195395;
0.268152185007253681141; 0.2305985218807194970044; 0.1926975807013710997155;
0.1545068793793944770927; 0.116084070675255208483; 0.0774865883312828416912;
0.0387724175060508219332];
w=[7.87863323894371499E-4; 0.0022074857357267779622; 0.003765228679341922074
0.005271942714885473911; 0.006731813485207399963; 0.00819757638675148245;
0.009675401484017187915; 0.0111313216640275037494; 0.012554384768517266032;
0.013962559866980614043; 0.015361326359102452973; 0.016734532475002583196;
0.01807386840881819058; 0.0193876458943177410048; 0.0206790432735281753154;
0.0219381873358330934614; 0.023158931013377024144; 0.0243456901822733592701;
0.025500217603130127604; 0.02661573749902468675858; 0.0276876261110610915154;
0.028718386841092123288; 0.029708927277776594642; 0.030654360891411525379;
0.031551223619115362481; 0.032400982507605944285; 0.033204044341257560401;
0.0339568628342098062514; 0.03465693584349753394614; 0.035305144708621841039;
0.0359016027836281044275; 0.036443826530340924758; 0.036930169534048554605;
0.037361180025469218088; 0.037736801263093544153; 0.0380554637788524209907;
0.0383163240051748596785; 0.0385197417499507269362; 0.038665555439141040397;
0.03875302937875238614;
0.038782104764282805386];
end
end

function w = zfun(z)
% Z function, 16-point, for Im(z)>0
n=16; % seems 16 point enough
if(n==16)
a0=1.07066256892707;
a=[5.60766224233511e-07; 2.24620097899822e-06; -3.15056632263500e-06;
    -1.54285566365750e-05; 1.22484813475827e-05; 0.000118880705332753;
    4.91023132930158e-05; -0.000861889712582147; -0.00218962834323728;
    0.00207766612101661; 0.0292376596463352; 0.107896590170172;
    0.264769037943556; 0.500124632160202; 0.768562082209370;
    0.986426746845193];
else % 32-point
a0=1.51414552570188;
a=[-7.35356220360472e-13; 2.11063978794446e-12; 4.53067097727633e-12;
    -1.21546557541041e-11; -3.12800549351344e-11; 6.57746704324502e-11;
    2.34349899728981e-10; -2.95128694920155e-10; -1.80992868609176e-09;
    4.58397889091522e-10; 1.34263336750567e-08; 1.29371148910838e-08;
    -8.35738482541043e-08; -2.36061230470525e-07; 2.40109672450982e-07;
    2.48329835458361e-06; 3.84835517182199e-06; -1.20790841413618e-05;
    -7.37703226966254e-05; -0.000138412519217242; 0.000221495956298208;
    0.00254987801405394; 0.0107230751170958; 0.0323305475629515;
    0.0793290963243440; 0.166686715461816; 0.308055395510008;
    0.508856966235833; 0.759142004485550; 1.03002378803814;
    1.27706416657555; 1.45123857910910];
end

N=length(a);
L = sqrt(N)/2^(1/4);

t = (L+1i*z)./(L-1i*z);
p = polyval(a,t); % polynomial evaluation
h = 1i*(2*p./(L-1i*z).^2+(a0/L)./(L-1i*z));
w=h*pi;
end
